{"results": [{"node": {"raw_sql": "select\n    id as customer_id,\n    first_name,\n    last_name\n\nfrom `dbt-tutorial`.jaffle_shop.customers", "compiled": true, "database": "dbt-demos", "schema": "dbt_blake", "fqn": ["jaffle_shop", "staging", "stg_customers"], "unique_id": "model.jaffle_shop.stg_customers", "package_name": "jaffle_shop", "root_path": "/Users/blake/Documents/dbt-tutorial/jaffle-shop", "path": "staging/stg_customers.sql", "original_file_path": "models/staging/stg_customers.sql", "name": "stg_customers", "resource_type": "model", "alias": "stg_customers", "checksum": {"name": "sha256", "checksum": "903ccbdde9be5b978a23ccbbe8bbda578240cdc684a747f9a795c5d45672a007"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "This model cleans up customer data", "columns": {"customer_id": {"name": "customer_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/compiled/jaffle_shop/models/staging/stg_customers.sql", "deferred": false, "compiled_sql": "select\n    id as customer_id,\n    first_name,\n    last_name\n\nfrom `dbt-tutorial`.jaffle_shop.customers", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select\n    id as customer_id,\n    first_name,\n    last_name\n\nfrom `dbt-tutorial`.jaffle_shop.customers"}, "error": null, "status": null, "execution_time": 0.02417612075805664, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-11T22:59:41.068710Z", "completed_at": "2020-12-11T22:59:41.091659Z"}, {"name": "execute", "started_at": "2020-12-11T22:59:41.091941Z", "completed_at": "2020-12-11T22:59:41.091955Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select\n    id as order_id,\n    user_id as customer_id,\n    order_date,\n    status\n\nfrom `dbt-tutorial`.jaffle_shop.orders", "compiled": true, "database": "dbt-demos", "schema": "dbt_blake", "fqn": ["jaffle_shop", "staging", "stg_orders"], "unique_id": "model.jaffle_shop.stg_orders", "package_name": "jaffle_shop", "root_path": "/Users/blake/Documents/dbt-tutorial/jaffle-shop", "path": "staging/stg_orders.sql", "original_file_path": "models/staging/stg_orders.sql", "name": "stg_orders", "resource_type": "model", "alias": "stg_orders", "checksum": {"name": "sha256", "checksum": "01658fba91401dbbe6dca6335e69cd2e576991f8ea37a3ae7a328ef0bbdce867"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "This model cleans up order data", "columns": {"order_id": {"name": "order_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/compiled/jaffle_shop/models/staging/stg_orders.sql", "deferred": false, "compiled_sql": "select\n    id as order_id,\n    user_id as customer_id,\n    order_date,\n    status\n\nfrom `dbt-tutorial`.jaffle_shop.orders", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select\n    id as order_id,\n    user_id as customer_id,\n    order_date,\n    status\n\nfrom `dbt-tutorial`.jaffle_shop.orders"}, "error": null, "status": null, "execution_time": 0.007463216781616211, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-11T22:59:41.092964Z", "completed_at": "2020-12-11T22:59:41.099494Z"}, {"name": "execute", "started_at": "2020-12-11T22:59:41.099809Z", "completed_at": "2020-12-11T22:59:41.099817Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id", "model": "{{ ref('stg_customers') }}"}}, "compiled": true, "database": "dbt-demos", "schema": "dbt_blake", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/blake/Documents/dbt-tutorial/jaffle-shop", "path": "schema_test/not_null_stg_customers_customer_id.sql", "original_file_path": "models/schema.yml", "name": "not_null_stg_customers_customer_id", "resource_type": "test", "alias": "not_null_stg_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_stg_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-demos`.`dbt_blake`.`stg_customers`\nwhere customer_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-demos`.`dbt_blake`.`stg_customers`\nwhere customer_id is null\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.016450881958007812, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-11T22:59:41.100866Z", "completed_at": "2020-12-11T22:59:41.116173Z"}, {"name": "execute", "started_at": "2020-12-11T22:59:41.116509Z", "completed_at": "2020-12-11T22:59:41.116518Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id", "model": "{{ ref('stg_customers') }}"}}, "compiled": true, "database": "dbt-demos", "schema": "dbt_blake", "fqn": ["jaffle_shop", "schema_test", "unique_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/blake/Documents/dbt-tutorial/jaffle-shop", "path": "schema_test/unique_stg_customers_customer_id.sql", "original_file_path": "models/schema.yml", "name": "unique_stg_customers_customer_id", "resource_type": "test", "alias": "unique_stg_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/unique_stg_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from `dbt-demos`.`dbt_blake`.`stg_customers`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from `dbt-demos`.`dbt_blake`.`stg_customers`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.009778976440429688, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-11T22:59:41.117377Z", "completed_at": "2020-12-11T22:59:41.126320Z"}, {"name": "execute", "started_at": "2020-12-11T22:59:41.126603Z", "completed_at": "2020-12-11T22:59:41.126611Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n  config(\n    materialized='view'\n  )\n}}\n\n\nwith customers as (\n\n    select * from {{ref('stg_customers')}}\n),\n\norders as (\n\n    select * from {{ ref('stg_orders')}}\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final", "compiled": true, "database": "dbt-demos", "schema": "dbt_blake", "fqn": ["jaffle_shop", "customers"], "unique_id": "model.jaffle_shop.customers", "package_name": "jaffle_shop", "root_path": "/Users/blake/Documents/dbt-tutorial/jaffle-shop", "path": "customers.sql", "original_file_path": "models/customers.sql", "name": "customers", "resource_type": "model", "alias": "customers", "checksum": {"name": "sha256", "checksum": "f6fb5f4096a5770873417ab4a95a491cbe8c38e660039c4fd1af4ea2f51c30e8"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_customers"], ["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_customers", "model.jaffle_shop.stg_orders"]}, "description": "One record per customer", "columns": {"customer_id": {"name": "customer_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}, "first_order_date": {"name": "first_order_date", "description": "NULL when a customer has not yet placed an order.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/compiled/jaffle_shop/models/customers.sql", "deferred": false, "compiled_sql": "\n\n\nwith customers as (\n\n    select * from `dbt-demos`.`dbt_blake`.`stg_customers`\n),\n\norders as (\n\n    select * from `dbt-demos`.`dbt_blake`.`stg_orders`\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\nwith customers as (\n\n    select * from `dbt-demos`.`dbt_blake`.`stg_customers`\n),\n\norders as (\n\n    select * from `dbt-demos`.`dbt_blake`.`stg_orders`\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final"}, "error": null, "status": null, "execution_time": 0.011127233505249023, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-11T22:59:41.127338Z", "completed_at": "2020-12-11T22:59:41.137538Z"}, {"name": "execute", "started_at": "2020-12-11T22:59:41.137841Z", "completed_at": "2020-12-11T22:59:41.137849Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status", "model": "{{ ref('stg_orders') }}"}}, "compiled": true, "database": "dbt-demos", "schema": "dbt_blake", "fqn": ["jaffle_shop", "schema_test", "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned"], "unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "package_name": "jaffle_shop", "root_path": "/Users/blake/Documents/dbt-tutorial/jaffle-shop", "path": "schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "original_file_path": "models/schema.yml", "name": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "resource_type": "test", "alias": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from `dbt-demos`.`dbt_blake`.`stg_orders`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from `dbt-demos`.`dbt_blake`.`stg_orders`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "column_name": "status"}, "error": null, "status": null, "execution_time": 0.011465072631835938, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-11T22:59:41.138741Z", "completed_at": "2020-12-11T22:59:41.149425Z"}, {"name": "execute", "started_at": "2020-12-11T22:59:41.149682Z", "completed_at": "2020-12-11T22:59:41.149689Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "order_id", "model": "{{ ref('stg_orders') }}"}}, "compiled": true, "database": "dbt-demos", "schema": "dbt_blake", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_orders_order_id"], "unique_id": "test.jaffle_shop.not_null_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/Users/blake/Documents/dbt-tutorial/jaffle-shop", "path": "schema_test/not_null_stg_orders_order_id.sql", "original_file_path": "models/schema.yml", "name": "not_null_stg_orders_order_id", "resource_type": "test", "alias": "not_null_stg_orders_order_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_stg_orders_order_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-demos`.`dbt_blake`.`stg_orders`\nwhere order_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-demos`.`dbt_blake`.`stg_orders`\nwhere order_id is null\n\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.009911060333251953, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-11T22:59:41.150413Z", "completed_at": "2020-12-11T22:59:41.159540Z"}, {"name": "execute", "started_at": "2020-12-11T22:59:41.159796Z", "completed_at": "2020-12-11T22:59:41.159804Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "order_id", "model": "{{ ref('stg_orders') }}"}}, "compiled": true, "database": "dbt-demos", "schema": "dbt_blake", "fqn": ["jaffle_shop", "schema_test", "unique_stg_orders_order_id"], "unique_id": "test.jaffle_shop.unique_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/Users/blake/Documents/dbt-tutorial/jaffle-shop", "path": "schema_test/unique_stg_orders_order_id.sql", "original_file_path": "models/schema.yml", "name": "unique_stg_orders_order_id", "resource_type": "test", "alias": "unique_stg_orders_order_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/unique_stg_orders_order_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from `dbt-demos`.`dbt_blake`.`stg_orders`\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from `dbt-demos`.`dbt_blake`.`stg_orders`\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.009084224700927734, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-11T22:59:41.160628Z", "completed_at": "2020-12-11T22:59:41.168827Z"}, {"name": "execute", "started_at": "2020-12-11T22:59:41.169098Z", "completed_at": "2020-12-11T22:59:41.169107Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select * from {{ ref('customers')}} where number_of_orders = 0", "compiled": true, "database": "dbt-demos", "schema": "dbt_blake", "fqn": ["jaffle_shop", "bad_customers"], "unique_id": "model.jaffle_shop.bad_customers", "package_name": "jaffle_shop", "root_path": "/Users/blake/Documents/dbt-tutorial/jaffle-shop", "path": "bad_customers.sql", "original_file_path": "models/bad_customers.sql", "name": "bad_customers", "resource_type": "model", "alias": "bad_customers", "checksum": {"name": "sha256", "checksum": "09c40f141c8e3b7537e7c13846256005aba165f0f8248a5b02aa1e93b2a0f628"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["customers"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/bad_customers.sql", "deferred": false, "compiled_sql": "select * from `dbt-demos`.`dbt_blake`.`customers` where number_of_orders = 0", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select * from `dbt-demos`.`dbt_blake`.`customers` where number_of_orders = 0"}, "error": null, "status": null, "execution_time": 0.007628679275512695, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-11T22:59:41.170407Z", "completed_at": "2020-12-11T22:59:41.177163Z"}, {"name": "execute", "started_at": "2020-12-11T22:59:41.177429Z", "completed_at": "2020-12-11T22:59:41.177436Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id", "model": "{{ ref('customers') }}"}}, "compiled": true, "database": "dbt-demos", "schema": "dbt_blake", "fqn": ["jaffle_shop", "schema_test", "not_null_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/blake/Documents/dbt-tutorial/jaffle-shop", "path": "schema_test/not_null_customers_customer_id.sql", "original_file_path": "models/schema.yml", "name": "not_null_customers_customer_id", "resource_type": "test", "alias": "not_null_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-demos`.`dbt_blake`.`customers`\nwhere customer_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-demos`.`dbt_blake`.`customers`\nwhere customer_id is null\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.009330272674560547, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-11T22:59:41.178253Z", "completed_at": "2020-12-11T22:59:41.186600Z"}, {"name": "execute", "started_at": "2020-12-11T22:59:41.186863Z", "completed_at": "2020-12-11T22:59:41.186870Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id", "model": "{{ ref('customers') }}"}}, "compiled": true, "database": "dbt-demos", "schema": "dbt_blake", "fqn": ["jaffle_shop", "schema_test", "unique_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/blake/Documents/dbt-tutorial/jaffle-shop", "path": "schema_test/unique_customers_customer_id.sql", "original_file_path": "models/schema.yml", "name": "unique_customers_customer_id", "resource_type": "test", "alias": "unique_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/unique_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from `dbt-demos`.`dbt_blake`.`customers`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from `dbt-demos`.`dbt_blake`.`customers`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.011001110076904297, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-11T22:59:41.188221Z", "completed_at": "2020-12-11T22:59:41.198138Z"}, {"name": "execute", "started_at": "2020-12-11T22:59:41.198484Z", "completed_at": "2020-12-11T22:59:41.198493Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-12-11T22:59:41.200071Z", "elapsed_time": 0.5306830406188965}